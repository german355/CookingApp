// Generated by view binder compiler. Do not edit!
package com.example.cooking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cooking.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecipeDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageView basketIcon;

  @NonNull
  public final MaterialButton decreasePortion;

  @NonNull
  public final MaterialButton increasePortion;

  @NonNull
  public final RecyclerView ingredientsRecyclerview;

  @NonNull
  public final FloatingActionButton likeButton;

  @NonNull
  public final TextView portionCount;

  @NonNull
  public final TextView recipeDate;

  @NonNull
  public final ShapeableImageView recipeImage;

  @NonNull
  public final TextView recipeTitle;

  @NonNull
  public final RecyclerView stepsRecyclerview;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityRecipeDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ImageView basketIcon, @NonNull MaterialButton decreasePortion,
      @NonNull MaterialButton increasePortion, @NonNull RecyclerView ingredientsRecyclerview,
      @NonNull FloatingActionButton likeButton, @NonNull TextView portionCount,
      @NonNull TextView recipeDate, @NonNull ShapeableImageView recipeImage,
      @NonNull TextView recipeTitle, @NonNull RecyclerView stepsRecyclerview,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.basketIcon = basketIcon;
    this.decreasePortion = decreasePortion;
    this.increasePortion = increasePortion;
    this.ingredientsRecyclerview = ingredientsRecyclerview;
    this.likeButton = likeButton;
    this.portionCount = portionCount;
    this.recipeDate = recipeDate;
    this.recipeImage = recipeImage;
    this.recipeTitle = recipeTitle;
    this.stepsRecyclerview = stepsRecyclerview;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecipeDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecipeDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_recipe_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecipeDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.basket_icon;
      ImageView basketIcon = ViewBindings.findChildViewById(rootView, id);
      if (basketIcon == null) {
        break missingId;
      }

      id = R.id.decrease_portion;
      MaterialButton decreasePortion = ViewBindings.findChildViewById(rootView, id);
      if (decreasePortion == null) {
        break missingId;
      }

      id = R.id.increase_portion;
      MaterialButton increasePortion = ViewBindings.findChildViewById(rootView, id);
      if (increasePortion == null) {
        break missingId;
      }

      id = R.id.ingredients_recyclerview;
      RecyclerView ingredientsRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsRecyclerview == null) {
        break missingId;
      }

      id = R.id.like_button;
      FloatingActionButton likeButton = ViewBindings.findChildViewById(rootView, id);
      if (likeButton == null) {
        break missingId;
      }

      id = R.id.portion_count;
      TextView portionCount = ViewBindings.findChildViewById(rootView, id);
      if (portionCount == null) {
        break missingId;
      }

      id = R.id.recipe_date;
      TextView recipeDate = ViewBindings.findChildViewById(rootView, id);
      if (recipeDate == null) {
        break missingId;
      }

      id = R.id.recipe_image;
      ShapeableImageView recipeImage = ViewBindings.findChildViewById(rootView, id);
      if (recipeImage == null) {
        break missingId;
      }

      id = R.id.recipe_title;
      TextView recipeTitle = ViewBindings.findChildViewById(rootView, id);
      if (recipeTitle == null) {
        break missingId;
      }

      id = R.id.steps_recyclerview;
      RecyclerView stepsRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (stepsRecyclerview == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityRecipeDetailBinding((CoordinatorLayout) rootView, basketIcon,
          decreasePortion, increasePortion, ingredientsRecyclerview, likeButton, portionCount,
          recipeDate, recipeImage, recipeTitle, stepsRecyclerview, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
