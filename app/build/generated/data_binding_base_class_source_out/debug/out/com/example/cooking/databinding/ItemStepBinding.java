// Generated by view binder compiler. Do not edit!
package com.example.cooking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cooking.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemStepBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout buttonContainer;

  @NonNull
  public final TextView editStepInstruction;

  @NonNull
  public final ShapeableImageView stepImage;

  @NonNull
  public final TextView textStepNumber;

  @NonNull
  public final Button toCartButton;

  @NonNull
  public final Button toListButton;

  private ItemStepBinding(@NonNull CardView rootView, @NonNull LinearLayout buttonContainer,
      @NonNull TextView editStepInstruction, @NonNull ShapeableImageView stepImage,
      @NonNull TextView textStepNumber, @NonNull Button toCartButton,
      @NonNull Button toListButton) {
    this.rootView = rootView;
    this.buttonContainer = buttonContainer;
    this.editStepInstruction = editStepInstruction;
    this.stepImage = stepImage;
    this.textStepNumber = textStepNumber;
    this.toCartButton = toCartButton;
    this.toListButton = toListButton;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemStepBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemStepBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_step, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemStepBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_container;
      LinearLayout buttonContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.edit_step_instruction;
      TextView editStepInstruction = ViewBindings.findChildViewById(rootView, id);
      if (editStepInstruction == null) {
        break missingId;
      }

      id = R.id.step_image;
      ShapeableImageView stepImage = ViewBindings.findChildViewById(rootView, id);
      if (stepImage == null) {
        break missingId;
      }

      id = R.id.text_step_number;
      TextView textStepNumber = ViewBindings.findChildViewById(rootView, id);
      if (textStepNumber == null) {
        break missingId;
      }

      id = R.id.to_cart_button;
      Button toCartButton = ViewBindings.findChildViewById(rootView, id);
      if (toCartButton == null) {
        break missingId;
      }

      id = R.id.to_list_button;
      Button toListButton = ViewBindings.findChildViewById(rootView, id);
      if (toListButton == null) {
        break missingId;
      }

      return new ItemStepBinding((CardView) rootView, buttonContainer, editStepInstruction,
          stepImage, textStepNumber, toCartButton, toListButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
